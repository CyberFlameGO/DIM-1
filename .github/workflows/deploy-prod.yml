name: Deploy Prod

on:
  workflow_dispatch:
    inputs:
      patch:
        description: 'Should this be a patch release?'
        required: true
        default: 'true'
  schedule:
    # Deploy at 5pm Sunday PST, which is 1am Monday UTC
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 1 * * 1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # So sentry can get the previous commit
          # Use the dim-release-bot token rather than the default
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: dim.rsa
          known_hosts: ${{ secrets.REMOTE_HOST }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0

      - name: set feature
        if: ${{ !github.event.inputs.patch }}
        run: |
          echo "build_level='feature'" >> $GITHUB_ENV

      - name: set bug
        if: ${{ github.event.inputs.patch }}
        run: |
          echo "build_level='bug'" >> $GITHUB_ENV

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.package-version.outputs.current-version }}
          version-fragment: ${{ env.build_level }}

      - name: set version
        run: |
          echo "VERSION=${{ steps.bump_version.outputs.next-version }}" >> $GITHUB_ENV

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Generate release notes
        run: awk '/## Next/{flag=1;next}/##/{flag=0}flag' docs/CHANGELOG.md >release-notes.txt

      - name: Update CHANGELOG.md
        run: perl -i'' -pe"s/^## Next/## Next\n\n## $VERSION $OPENSPAN($DATE)$CLOSESPAN/" docs/CHANGELOG.md
        env:
          OPENSPAN: '\<span class="changelog-date"\>'
          CLOSESPAN: '\<\/span\>'
          DATE: $(TZ="America/Los_Angeles" date +"%Y-%m-%d")

      - name: Commit changes
        uses: EndBug/add-and-commit@v8
        with:
          author_name: DIM Release Bot
          author_email: destinyitemmanager@gmail.com
          message: ${{ env.VERSION }}
          tag: v${{ env.VERSION }}

      - name: Build Release
        run: yarn build:release

      - name: Check Release
        run: yarn syntax

      - name: ./build/rsync-deploy.sh
        run: ./build/rsync-deploy.sh
        env:
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: app.destinyitemmanager.com

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-notes.txt

      - name: Purge CloudFlare cache
        run: ./build/purge-cloudflare.sh
        env:
          CLOUDFLARE_KEY: ${{ secrets.CLOUDFLARE_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          APP_DOMAIN: app.destinyitemmanager.com

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: destiny-item-manager
          SENTRY_PROJECT: dim
        with:
          environment: release
          version: ${{ env.VERSION }}
